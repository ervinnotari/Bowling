name: SonarCloud Actions

on:
  push:
    branches: [master, dev]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: 3.1.x

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
          dotnet tool update dotnet-coverageconverter --tool-path ./.sonar/convert

      - name: Test and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"ervinnotari_Bowling" /o:"ervinnotari" /d:sonar.login="840e8fe14ce2f57360a078b97f0a2c805e115098" /d:sonar.host.url="https://sonarcloud.io"  /d:sonar.cs.vscoveragexml.reportsPaths="**.coveragexml" /d:sonar.cs.vstest.reportsPaths="**.trx" /d:sonar.coverage.exclusions="**\*Test*.cs,**\Bowling.Application.**.cs"
          dotnet build "Bowling.sln"
          dotnet test "Bowling.sln" --collect "Code Coverage" --logger trx --results-directory "TestResults"
          ./.sonar/convert/dotnet-coverageconverter -f "." -p true -r
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.login=840e8fe14ce2f57360a078b97f0a2c805e115098