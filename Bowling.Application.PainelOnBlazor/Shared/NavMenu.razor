@using BowlingPainelOnBlazor.Data;
@inject BowlingService bolingService;

<div class="top-row pl-4 navbar navbar-dark">
    <div class="navbar-brand">
        Bowling Painel<span style="font-size: 10px">On Blazor</span>
    </div>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="docs">
                <span class="oi oi-book" aria-hidden="true"></span> Documentation
            </NavLink>
        </li>
        @foreach (var alley in Alleys)
        {
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="@($"painel/{alley}")">
                    <span class="oi oi-eye" aria-hidden="true"></span> @alley
                </NavLink>
            </li>
        }
    </ul>
</div>

@code {
    private bool collapseNavMenu = false;
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private List<string> Alleys = new List<string>();

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override Task OnInitializedAsync()
    {
        MenuRefresh();
        bolingService.Game.OnChange += BowlingServiceOnChange;
        return base.OnInitializedAsync();
    }

    private void BowlingServiceOnChange(object o) => MenuRefresh();

    private void MenuRefresh()
    {
        InvokeAsync(() =>
        {
            if (bolingService.Game.GetAlleysName().Count == Alleys.Count) return;
            Alleys = bolingService.Game.GetAlleysName();
            this.StateHasChanged();
        });
    }
}
